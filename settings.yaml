ARGS:
  epochs: 5000
  batch_size: -1
  patience: 1000

MODEL:
  f_in : 2
  f_out: 3
  f_hid: 20
  depth: 3
  in_lb: "[0.,-1.]"
  in_ub: "[1.,1.]"
  in_mean: "[0.5,0.]" #for mean activation function
  act: "tanh"
  seed: 0

SEED:
  seed: 0
  
NS:
  nx: "[100, 100]"

VAR_NAMES:
 [s, i, r]

CUSTOM_VARS:
  epsilon: 0.1
  gamma: 0.3
  beta: 0.5

CONDS:
  pde:
     eq_string: '( (d/dy) s - epsilon* (d/dx)^2 s ,   
                 (d/dy) i + gamma* i - epsilon* (d/dx)^2 i , 
                 (d/dy) r - gamma* i - epsilon* (d/dx)^2 r )'
     right_side: "lambda t, x: x*[0., 0., 0.]"
     point_area: "[[tmin, tmax], [xmin, xmax]]"
     N: "int(1e4)"
     compute_grads: True
  initial: 
     eq_string: '( s , i , r )'
     right_side: "lambda t, x: [0.8, 0.2, 0] * tf.math.maximum(-81/4*(x - 1/3)*(x + 1/3), 0*x)"
     point_area: "[[tmin, tmin+0.01],[xmin, xmax]]"
     N: "int(1e4)"
     compute_grads: False
  border1: 
     eq_string: '( (d/dx) s , (d/dx) i , (d/dx) r )'
     right_side: "lambda t, x: [0., 0., 0.]*x"
     point_area: "[[tmin, tmax],[xmin, xmin]]"
     N: "int(1e2)"
     compute_grads: True
  border2: 
     eq_string: '( (d/dx) s , (d/dx) i , (d/dx) r )'
     right_side: "lambda t, x:  x* [0., 0., 0.]"
     point_area: "[[tmin, tmax],[xmax, xmax]]"
     N: "int(1e2)"
     compute_grads: True

